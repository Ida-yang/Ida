import Vue from 'vue'
import Vuex from 'vuex'
import axios from 'axios'
/*使用Vuex*/
Vue.use(Vuex)
/*配置全局数据*/
const state = {
  //保存状态
  selection:null,
  //组织列表
  organizationList:[],
  //组织列表总数
  organizationListnumber:0,
  //仓位列表
  warehouseList:[],
  //仓位列表总数
  warehouseListnumber:0,
  //角色列表
  roleList:[],
  //角色列表总数
  roleListnumber:0,
  //全部权限列表
  powersList:[],
  //全部权限列表总数
  powersListnumber:0,
  //用户列表
  userList:[],
  //用户列表总数
  userListnumber:0,
  //全部角色列表
  rolesList:[],
  //全部角色列表总数
  rolesListnumber:0,
  //wmsnet-token 
  token:"",
  //用户登录信息
  userData:null,
  //出库单详情数据
  CheckData:null,
  
  orgId:null,

  configThis:null,
  //配置访问地址
  defaultHttp: 'http://14.18.72.63:8092/wmsnet2/',
  //Org 访问基础地址
  orgURL:"organization/",
  //仓位基础地址
  warehouseUrl:'ck/',
  //角色基础地址
  roleUrl:'role/',
  //权限基础地址
  powersUrl:'function/',
  //用户基础地址
  userUrl:'user/',
  //出库单修改接口
  orderUrl:'deliveryOrder/',
  //生产工单基础接口
  productWoUrl:'productWo/',
  //序列号
  serial:'serialnumber/',
  serialArr:[],
}
/*配置全局函数*/
const mutations = {
  loadUserNameInput(state){
    let Cboolean=state.userNamechecked
    state.userNamechecked==!Cboolean
  },
  loadUserPassInput(state){
    let Cboolean=state.userPasschecked
    state.userPasschecked==!Cboolean
  },
  set_serialArr(state, newArr){
      state.serialArr = newArr
  },
  set_token(state, token) {
    state.token = token;
    sessionStorage.token = token;
  },
  del_token(state) {
    state.token = '';
    sessionStorage.removeItem('token');
  }
  
  
}
const actions = {
  loginForm (context,userInput){
    state.selection = userInput[1];
    axios({
      method: 'post',
      url: context.state.defaultHttp+'/user/login',
      data:JSON.stringify(userInput[0])
    }).then(function(res){
      if(res.data && res.data.code == 200) {
        state.userData = res.data.result;
        localStorage.setItem('orgId',userInput[0].orgId);
        // state.wmsnetToken = res.getResponseHeader('wmsnet-token');
        if(state.selection.userNamechecked === "true"){
          localStorage.setItem('userName',userInput[0].user);
          localStorage.setItem('userNameChecked',true);
        }else{
          localStorage.removeItem('userName');
          localStorage.removeItem('userNameChecked');
        }
        if(state.selection.userPasschecked === "true"){
          localStorage.setItem('userPass',userInput[0].password);
          localStorage.setItem('userPasschecked',true);
        }else{
          localStorage.removeItem('userPass');
          localStorage.removeItem('userPasschecked');
        }
        state.token = res.headers['wmsnet-token']
        localStorage.getItem('token',state.token)
        localStorage.setItem("token",res.headers['wmsnet-token']) ;
        userInput[2].$router.push('/index')
        state.configThis = userInput[2];
        state.configThis.$message({
          message: '登录成功',
          type: 'success'
        })
      } else {
        state.configThis = userInput[2];
        state.configThis.$message({
          message: res.data.message,
          type: 'error'
        })
      }
    })
    .catch(function(err){
      console.log(err)
    })
  },

}
/*将store导出*/
const store = new Vuex.Store({
  state: state,
  mutations: mutations,
  actions:actions
})

export default store;