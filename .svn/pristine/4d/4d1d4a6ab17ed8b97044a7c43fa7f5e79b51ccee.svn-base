<template>
    <div>
        <el-row :gutter="10">
            <div class="grid-content">
                <el-button type="primary" size="small" @click="getU9Datas()">
                    获取U9数据
                </el-button>
            </div>
        </el-row>
        <el-row :gutter="10">
            <div class="searchList" @keyup.enter="search()">
                <el-input v-model="searchList.code" placeholder="客户编码"></el-input>
            </div>
            <div class="searchList" @keyup.enter="search()">
                <el-input v-model="searchList.name" placeholder="客户名称"></el-input>
            </div>
            <div class="searchList" @keyup.enter="search()">
                <el-input v-model="searchList.category" placeholder="客户类别"></el-input>
            </div>
        </el-row>
        <el-table
            :data="badTableData.slice(0,recentPage*recordCount)"
            max-height="450"
            border
            style="width: 100% ;text-align: center">
            <el-table-column
                header-align="center"
                align="center"
                prop="code"
                label="客户编码"
                width="160"
                >
            </el-table-column>
            <el-table-column
                prop="name"
                label="客户名称"
                header-align="center"
                align="center"
                width="160">
            </el-table-column>
            <el-table-column
                prop="category"
                header-align="center"
                align="center"
                label="客户分类"
                width="160">
            </el-table-column>
            <el-table-column
                prop="phone"
                label="电话"
                header-align="center"
                align="center"
                width="160">
            </el-table-column>
            <el-table-column
                prop="address"
                label="地址"
                header-align="center"
                align="center"
                width="160">
            </el-table-column>
            <el-table-column
                prop="remark"
                header-align="center"
                align="center"
                label="描述"
                width="160">
            </el-table-column>
        </el-table>
        <div class="block numberPage">
            <el-pagination
            @size-change="handleSizeChange"
            @current-change="handleCurrentChange"
            :current-page="recentPage"
            :page-sizes="[10, 15, 20, 25]"
            :page-size="10"
            layout="total, sizes, prev, pager, next, jumper"
            :total="tableNumber">
            </el-pagination>
        </div>
    </div>
</template>
<style>
    .numberPage{
        margin-top: 20px;
        text-align: right
    }
    .el-dialog__body {
        padding: 30px 80px 30px 20px !important;
        color: #606266;
        font-size: 14px;
    }
    .el-table td, .el-table th {
        padding: 6px 0 !important;
        line-height: 30px;
    }
    .btnSet{
        height: 40px;
    }
    .el-input__inner {
        height: 30px;
        line-height: 30px;
        width: 100%;
    }
    .el-table {
        font-size: 12px!important;
    }
    .el-table td, .el-table th {
        padding: 8px 0;
        line-height:30px; 
    }
    .searchList{
        width: 220px;
        margin: 5px 5px 5px 0px;
        float: left;
    }
</style>

<script>
    import store from '../../../../store/store'
    import axios from 'axios'
    export default {
        name:'CustomerData',
        computed: {
            badTableData(){
                return store.state.customerList;
            },
            tableNumber(){
               return store.state.customerListnumber;     
            }
        },
        props:{
            totalNum:Number,
        },
        store,
        data(){
            return {
                searchList:{
                    code:null,
                    name:null,
                    category:null,
                },
                recentPage:1,//默认第一页
                recordCount:10,//默认10条
                formLabelWidth: '120px'
            }
        },
        beforeCreate(){
            let _this = this;
            this.$nextTick(function () {
                axios({
                    method: 'post',
                    url: _this.$store.state.defaultHttp+_this.$store.state.customerUrl+'getByPage?recentPage='+_this.recentPage+'&recordCount='+_this.recordCount
                }).then(function(res){
                    _this.$store.state.customerList = res.data.result.records;
                    _this.$store.state.customerListnumber = res.data.result.totalRecords;
                    
                }).catch(function(err){
                    console.log(err);
                });
            });
        },
        methods: {
            reloadTable(flag) {
                let _this = this;
                let searchList = {}
                if(flag) {
                    if(_this.searchList.code) {
                        searchList.code = _this.searchList.code;
                    }
                    if(_this.searchList.name) {
                        searchList.name = _this.searchList.name;
                    }
                    if(_this.searchList.category) {
                        searchList.category = _this.searchList.category;
                    }
                }
                axios({
                    method: 'post',
                    url: _this.$store.state.defaultHttp+_this.$store.state.customerUrl+'getByPage?recentPage='+_this.recentPage+'&recordCount='+_this.recordCount,
                    data: JSON.stringify(searchList),
                }).then(function(res){
                    _this.$store.state.customerList = res.data.result.records;
                    _this.$store.state.customerListnumber = res.data.result.totalRecords;
                    
                }).catch(function(err){
                    console.log(err);
                });
            },
            search() {
                this.$options.methods.reloadTable.bind(this)(true);
                this.searchList.code = null;
                this.searchList.name = null;
                this.searchList.category = null;
            },
            getU9Datas() {
                let _this = this;
                axios({
                    method: 'post',
                    url: _this.$store.state.defaultHttp+_this.$store.state.customerUrl+'getU9Data',
                }).then(function(res){
                    if(res.data.code && res.data.code == 200) {
                            _this.$message({
                                message: '获取U9数据成功',
                                type: 'success'
                            });
                            _this.$options.methods.reloadTable.bind(_this)(false);
                        } else {
                            _this.$message({
                                message: res.data.message,
                                type: 'error'
                            });
                        }
                }).catch(function(err){
                    console.log(err);
                });
            },
            handleSizeChange(val) {
                let _this = this;
                _this.recordCount = val;
                _this.$options.methods.reloadTable.bind(_this)(false);
            },
            handleCurrentChange(val) {
                let _this = this;
                _this.recentPage = val;
                _this.$options.methods.reloadTable.bind(_this)(false);
            }
        },
        
    }
</script>
