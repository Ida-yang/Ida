<template>
<!-- 盘点差异 -->
    <div>
        <!-- <div class="searchList" @keyup.enter="search()">
            <el-input v-model="searchList.snnum" placeholder="序列号"></el-input>
        </div>
        <div class="searchList" @keyup.enter="search()">
            <el-input v-model="searchList.puwomate" placeholder="物料"></el-input>
        </div>
        <div class="searchList" @keyup.enter="search()">
            <el-input v-model="searchList.produprocess" placeholder="工序"></el-input>
        </div> -->
        <el-table
            :data="tableData"
            :max-height="maxheight"
            border
            style="width: 100% ;text-align: center;margin-top:10px">
            <el-table-column
                prop="orderNum"
                label="盘点单号"
                header-align="center"
                align="center"
                width="160">
                <template slot-scope="scope">
                    <el-button
                    size="mini"
                    style="border:none;color:#3c8dbc"
                    @click="CheckTheDetails(scope.$index, scope.row)">{{ scope.row.orderNum }}</el-button>
                </template>
            </el-table-column>
            <el-table-column
                prop="status"
                label="状态"
                header-align="center"
                align="center"
                width="100">
                <template slot-scope="scope">
                    <el-tag close-transition>{{scope.row.status | formatStatus}}</el-tag>
                </template>
            </el-table-column>
            <el-table-column
                prop="diffCount"
                label="差异总数量"
                header-align="center"
                align="center"
                width="100">
            </el-table-column>
            <el-table-column
                prop="operator"
                label="操作用户"
                header-align="center"
                align="center"
                width="100">
            </el-table-column>
            <el-table-column
                prop="createtime"
                header-align="center"
                align="center"
                label="创建时间"
                width="140">
                <template slot-scope="scope">
                    {{scope.row.createtime | dateFormat}}
                </template>
            </el-table-column>
            <el-table-column
                prop="updatetime"
                header-align="center"
                align="center"
                label="更新时间"
                width="140">
                <template slot-scope="scope">
                    {{scope.row.updatetime | dateFormat}}
                </template>
            </el-table-column>
            <!-- <el-table-column label="操作"
                width="160"
                header-align="center"
                align="center">
                <template slot-scope="scope">
                    <el-button
                    size="mini"
                    type="danger"
                    @click="handleDelete(scope.$index, scope.row)">删除</el-button>
                </template>
            </el-table-column> -->
        </el-table>
        <div class="block numberPage">
            <el-pagination
            @size-change="handleSizeChange"
            @current-change="handleCurrentChange"
            :current-page="recentPage"
            :page-sizes="[10, 15, 20, 25]"
            :page-size="10"
            layout="total, sizes, prev, pager, next, jumper"
            :total="tableNumber">
            </el-pagination>
        </div>
    </div>
</template>
<style>
    .numberPage{
        text-align: right;
        position: relative;
        top: 0;
        background-color: #fff;
        width: 100%;
    }
    .el-dialog__body {
        padding: 30px 80px 30px 20px !important;
        color: #606266;
        font-size: 14px;
    }
    .el-table td, .el-table th {
        padding: 6px 0 !important;
        line-height: 30px;
    }
    .el-input__inner {
        height: 30px;
        line-height: 30px;
        width: 100%;
    }
    .el-table {
        font-size: 12px!important;
    }
    .el-table td, .el-table th {
        padding: 8px 0;
        line-height:30px; 
    }
</style>

<script>
    import store from '../../../../store/store'
    import axios from 'axios'
    export default {
        name:'InventoryDifference',
        computed: {
            tableData(){
                return store.state.inventoryDifferenceList;
            },
            tableNumber(){
               return store.state.inventoryDifferenceListnumber;     
            },
            Height(){
                return store.state.maxheight;
            },
        },
        filters: {
            formatStatus: function (val) {
                return val == 0 ? '未盘点' : val== 1 ?  '已提交' : "未知状态";
            },

            //时间转换
            dateFormat(cellValue){
                const time = new Date(cellValue);
                if(time!=null){
                    const year = time.getFullYear();
                    const month = time.getMonth() + 1;
                    const day = time.getDate();
                    const hh = time.getHours();
                    const mm = time.getMinutes();
                    const ss = time.getSeconds();
                    const timeFormat= year + "-" + month + "-" + day + " " + hh + ":" + mm + ":" + ss;
                    return timeFormat;
                }
            },
        },
        props:{
            totalNum:Number,
        },
        store,
        data(){
            return {
                searchList:{
                },
                recentPage:1,//默认第一页
                recordCount:10,//默认10条
                maxheight:null,
            }
        },
        mounted() {
            this.reloadTable();
            let _this=this;
            _this.$store.commit("getMaxHeight")
            _this.maxheight = _this.Height;
        },
        methods: {
            reloadTable(flag) {
                let _this = this;
                let searchList = {}
                if(flag) {
                    if(_this.searchList.ordernumber) {
                        searchList.ordernumber = _this.searchList.ordernumber;
                    }
                    if(_this.searchList.puwomate) {
                        searchList.puwomate = _this.searchList.puwomate;
                    }
                    if(_this.searchList.rejectcause) {
                        searchList.rejectcause = _this.searchList.rejectcause;
                    }
                }
                axios({
                    method: 'post',
                    url: _this.$store.state.defaultHttp+_this.$store.state.inventoryDifferenceUrl+'getByPage?recentPage='+_this.recentPage+'&recordCount='+_this.recordCount,
                    data: JSON.stringify(searchList),
                }).then(function(res){
                    _this.$store.state.inventoryDifferenceList = res.data.result.records;
                    _this.$store.state.inventoryDifferenceListnumber = res.data.result.totalRecords;
                    
                }).catch(function(err){
                    console.log(err);
                });
            },
            search() {
                this.$options.methods.reloadTable.bind(this)(true);
                this.searchList.ordernumber = null;
                this.searchList.puwomate = null;
                this.searchList.rejectcause = null;
            },
            handleSizeChange(val) {
                let _this = this;
                _this.recordCount = val;
                _this.$options.methods.reloadTable.bind(_this)();
            },
            handleCurrentChange(val) {
                let _this = this;
                _this.recentPage = val;
                _this.$options.methods.reloadTable.bind(_this)();
            },
            handleDelete(index, row) {
                let _this = this;
                _this.$confirm('是否确认删除盘点单[' + row.orderNum + ']？', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                }).then(({ value }) => {
                    axios({
                        method: 'get',
                        url: _this.$store.state.defaultHttp+_this.$store.state.inventoryDifferenceUrl+'delete?id=' + row.id,
                    }).then(function(res){
                        if(res.data.code && res.data.code == 200) {
                            _this.$message({
                                message: '删除盘点单成功',
                                type: 'success'
                            });
                            _this.$options.methods.reloadTable.bind(_this)(false);
                        } else {
                            _this.$message({
                                message: res.data.message,
                                type: 'error'
                            });
                        }
                    }).catch(function(err){
                        // console.log(err);
                    })
                }).catch(() => {
                    this.$message({
                        type: 'info',
                        message: '取消删除单据[' + row.orderNum + ']'
                    });       
                });
            },
            CheckTheDetails(index, row){
                this.$store.state.inventoryDiffId = ""
                this.$store.state.inventoryDiffId = row.id;
                this.$router.push({ path: '/inventoryDifferenceDetail' })
            },
            rowClick(row, event, column) {
                this.$options.methods.CheckTheDetails.bind(this)(null, row);
            }
        },
        
    }
</script>
