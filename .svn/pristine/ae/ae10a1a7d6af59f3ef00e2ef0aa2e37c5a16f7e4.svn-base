<template>
    <div style="width:500px;border:1px solid #ccc;padding:30px;margin:20px;">
        <h3 style="text-align:left;margin-bottom:30px;"> {{selectInfo.title}} [{{selectInfo.name}}]</h3>
        <div class="drag-box" :model="false">
            <div class="drag-box-item">
                <div class="item-title" style="background-color:#f1f2f5;border-bottom: 1px solid #80808033;">请选择</div>
                <draggable 
                    v-model="wholeprocess" 
                    @remove="handleRemove" 
                    :options="dragOptions">
                    <transition-group tag="div" id="wholeprocess" class="item-ul">
                        <div 
                            v-for="item in wholeprocess" 
                            class="drag-list" 
                            :key="item.id" 
                            style="height:12px;line-height:12px;font-size:12px;">
                            {{item.name}}
                        </div>
                    </transition-group>
                </draggable>
            </div>
            <div style="height:330px;line-height:330px">
                <span class="item-icon">
                    <i class="el-icon-d-arrow-right"></i>
                </span>
            </div>
            &nbsp;&nbsp;&nbsp;
            <div class="drag-box-item selectedItem">
                <div class="item-title" style="background-color:#f1f2f5;border-bottom: 1px solid #80808033;">已选择</div>
                <draggable 
                    v-model="sortprocess" 
                    @remove="handleRemove" 
                    :options="dragOptions">
                    <transition-group tag="div" id="sortprocess" class="item-ul">
                        <div 
                            v-for="item in sortprocess" 
                            class="drag-list" 
                            :key="item.id" 
                            style="height:12px;line-height:12px;font-size:12px;">
                            {{item.name}}
                        </div>
                    </transition-group>
                </draggable>
            </div>
        </div>
        <div style="text-align:center;margin-top:30px">
            <el-button @click="closeTag">取 消</el-button>
            <el-button type="primary" @click="submit">提 交</el-button>
        </div>
    </div>
</template>
<style>
    .drag-box{
        display: flex;
        user-select: none;
    }
    .drag-box-item {
        flex: 1;
        max-width: 300px;
        min-width: 200px;
        margin-right: 10px;
        border-radius: 6px;
        border: 1px #e1e4e8 solid;
    }
    .item-title{
        padding: 8px 8px 8px 12px;
        font-size: 14px;
        line-height: 1.25;
        color: #24292e;
        font-weight: 400;
    }
    .item-icon{
        border: 1px solid #20a0ff;
        border-radius: 50%;
        padding: 10px;
    }
    .el-icon-d-arrow-right{
        color: #20a0ff;
    }
    .item-ul{
        padding: 0 8px 8px;
        height: 300px;
        overflow-y: scroll;
    }
    .item-ul::-webkit-scrollbar{
        width: 0;
    }
    .selectedItem .drag-list {
        border: 1px #20a0ff solid;
        /* color: #fff */
    }
    .drag-list {
        border: 1px #e1e4e8 solid;
        padding: 10px;
        margin: 5px 0 10px;
        list-style: none;
        background-color: #fff;
        border-radius: 6px;
        cursor: pointer;
        -webkit-transition: border .3s ease-in;
        transition: border .3s ease-in;
    }
    .drag-list:hover {
        border: 1px solid #20a0ff;
    }
    .drag-title {
        font-weight: 400;
        line-height: 25px;
        margin: 10px 0;
        font-size: 22px;
        color: #1f2f3d;
    }
    .ghost-style{
        display: block;
        color: transparent;
        border-style: dashed;
        
    }
</style>

<script>
    import store from '../../../../store/store'
    import {mapState} from 'vuex'
    import axios from 'axios'
    import bus from '../../bus';
    import draggable from 'vuedraggable'

    export default {
        name:'selectInfo',
        components:{
            draggable,
        },
        data(){
            return {
                wholeprocess: null,
                sortprocess: null,
                selectInfo: {
                    title:null,
                    id:null,
                    name:null,
                    submitURL:null,
                    sortitem:null,
                },
                dragOptions:{
                    animation: 120,
                    scroll: true,
                    group: 'sortlist',
                    ghostClass: 'ghost-style'
                },
            }
        },
        mounted() {
            this.loadData();
        },
        methods:{
            loadData() {
                this.selectInfo = this.$store.state.selectInfo;
                this.wholeprocess = this.selectInfo.wholeprocess;
                this.sortprocess = this.selectInfo.sortprocess;
                console.log(this.selectInfo);
            },
            handleRemove(event){
                console.log(this.selectInfo);
                this.$message.success('拖拽生产工序成功');
            },
            getComponentData() {
                return {
                    on: {
                    change: this.handleChange,
                    input: this.inputChanged
                    },
                    props: {
                    value: this.activeNames
                    }
                };
            },
            handleChange() {
                console.log('changed');
            },
            inputChanged(value) {
                this.activeNames = value;
            },
            submit() {
                let _this = this;
                let mydata = {};
                this.selectInfo.sortitem = this.$store.state.selectInfo.sortitem;
                mydata.id=this.selectInfo.id;
                if(this.selectInfo.sortitem == 'products'){
                    mydata.products = [],
                    this.sortprocess.forEach(e =>{
                        if(e['name']){
                            mydata.products.push(e.id);
                        }
                    });
                }else if(this.selectInfo.sortitem = 'produprocesses'){
                    mydata.produprocesses = [],
                    this.sortprocess.forEach(e =>{
                        if(e['name']){
                            mydata.produprocesses.push(e.id);
                        }
                    });
                }
                // console.log(mydata);
                
                axios({
                    method: 'post',
                    // url:  _this.$store.state.defaultHttp + _this.$store.state.techProcessUrl+'addTechtoprodu',
                    url: _this.selectInfo.submitURL,
                    data:JSON.stringify(mydata),
                }).then(function(res){
                    if(res.data.code && res.data.code == 200) {
                        _this.$message({
                            message: '添加成功',
                            type: 'success'
                        });
                        _this.closeTag();
                    }else {
                        _this.$message({
                            message: res.data.message,
                            type: 'error'
                        });
                    }
                }).catch(function(err){
                    console.log(err);
                });
            },
            closeTag() {
                let tagsList = this.$store.state.tagsList;
                let index;
                tagsList.forEach((element, i) => {
                    if(element.name == this.$options.name) {
                        index = i;
                    }
                });
                const delItem = this.$store.state.tagsList.splice(index, 1)[0];
                const item = this.$store.state.tagsList[index] ? this.$store.state.tagsList[index] : this.$store.state.tagsList[index - 1];
                if (item) {
                    delItem.path === this.$route.fullPath && this.$router.push(item.path);
                }else{
                    this.$router.push('/welcome');
                }
            }
        },
        
    }
</script>
