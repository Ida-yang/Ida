import Vue from 'vue';
import ElementUI from 'element-ui';
import { Message } from 'element-ui';
import 'element-ui/lib/theme-chalk/index.css';
import 'element-ui/lib/theme-chalk/display.css';
import './assets/iconfont/iconfont.css';
import axios from 'axios'

import App from './App.vue';
import router from './router';
import store from './store/store';
import VueResource from 'vue-resource';

import $ from 'jquery';
import base from './base';
Vue.use(base)

Vue.use(VueResource);
Vue.use(ElementUI);
Vue.prototype.$axios = axios;

var lastTime = new Date().getTime();//最后操作时间 
var currentTime = new Date().getTime();//当前时间
var timeOut = 3 * 60 * 60 * 1000; //设置超时时间： 3小时

axios.defaults.headers.common['wmsnet-token'] = sessionStorage.getItem('token');
// 添加请求拦截器
axios.interceptors.request.use(config => {
  // 在发送请求之前做些什么
  //判断是否存在token，如果存在将每个页面header都添加token
    if(sessionStorage.getItem('token')){
      lastTime = currentTime; //更新操作时间
      currentTime = new Date().getTime(); //更新当前时间
      if(currentTime - lastTime > timeOut){ //判断是否超时
        Message.error("登录已过期");
        setTimeout(() => {
          router.push({ path: '/login' });
        }, 1000);
        sessionStorage.removeItem('token');
      } else {
        config.headers.common['wmsnet-token']=sessionStorage.getItem('token');
      }
    }
   
  return config;
  }, error => {
    // 对请求错误做些什么
    return Promise.reject(error);
  });
   
  // http response 拦截器
  axios.interceptors.response.use(
  response => {
    if(response.data && response.data.code && response.data.code == 1005) {
      // Message({
      //   message: response.data.message,
      //   type: 'error'
      // });
      Message.error(response.data.message);
      setTimeout(() => {
        router.push({ path: '/login' });
      }, 1000);
    }
    return response;
  },
  error => {
   
    if (error.response) {
      switch (error.response.status) {
        case 401:
        this.$store.commit('del_token');
          router.replace({
          path: '/login',
          query: {redirect: router.currentRoute.fullPath}//登录成功后跳入浏览的当前页面
        })
    }
  }
  return Promise.reject(error.response.data)
  });
new Vue({
  el: '#app',
  router,
  store,
  components: { App },
  template: '<App/>',
  render: h => h(App),
  created(){
    if(this.$store.state.userData == null){
      this.$store.state.userData = JSON.parse(localStorage.getItem('userData'))
    }
  }
});