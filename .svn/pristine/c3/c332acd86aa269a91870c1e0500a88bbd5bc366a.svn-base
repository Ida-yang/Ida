<template>
    <div>
        <el-row :gutter="10">
            <el-col :xs="4" :sm="6" :md="8" :lg="9" :xl="11"><div class="grid-content">
                <el-button type="primary" size="small" @click="dialogFormVisible = true">新增组织</el-button>
            </div></el-col>
        </el-row>
        <el-row :gutter="10" style="margin-top:10px">
            <el-col :xs="8" :sm="4" :md="4" :lg="3" :xl="1">
                <div class="grid-content ">
                    <el-input v-model="orgnum" placeholder="组织编号"></el-input>
                </div>
            </el-col>
            <el-col :xs="8" :sm="4" :md="4" :lg="3" :xl="1">
                <div class="grid-content ">
                    <el-input v-model="orgname" placeholder="组织名称"></el-input>
                </div>
            </el-col>
            <el-col :xs="8" :sm="4" :md="4" :lg="3" :xl="1">
                <div class="grid-content ">
                    <el-input v-model="orgposition" placeholder="组织位置"></el-input>
                </div>
            </el-col>
            <el-col :xs="8" :sm="6" :md="5" :lg="5" :xl="2">
                <div class="grid-content btnSet">
                    <el-button type="primary"  size="mini" @click="selectData">查询</el-button>
                    <el-button type="info"  size="mini" @click="resBtn">重置</el-button>
                </div>
            </el-col>
        </el-row>
        <el-table
            :data="tableData.slice((currentPage-1)*pageSize,currentPage*pageSize)"
            
            max-height="450"
            style="width: 100% ;text-align: center">
            <el-table-column
                header-align="center"
                align="center"
                prop="orgnum"
                label="组织编号"
                width="180"
                >
            </el-table-column>
            <el-table-column
                prop="orgname"
                label="组织名称"
                header-align="center"
                align="center"
                width="320">
            </el-table-column>
            <el-table-column
                prop="orgposition"
                header-align="center"
                align="center"
                label="位置"
                width="120">
            </el-table-column>
            <el-table-column label="操作"
                width="200"
                header-align="center"
                align="center">
            <template slot-scope="scope">
                <el-button
                size="mini"
                @click="handleEdit(scope.$index, scope.row)">编辑</el-button>
                <el-button
                size="mini"
                type="danger"
                @click="handleDelete(scope.$index, scope.row)">删除</el-button>
            </template>
            </el-table-column>
        </el-table>
        <div class="block numberPage">
            <el-pagination
            @size-change="handleSizeChange"
            @current-change="handleCurrentChange"
            :current-page="currentPage"
            :page-sizes="[10, 20, 50, 100]"
            :page-size="10"
            layout="total, sizes, prev, pager, next, jumper"
            :total="tableNumber">
            </el-pagination>
        </div>
        <el-dialog title="新增组织" :visible.sync="dialogFormVisible" width="47%">
            <el-form :model="OrgFrom">
                <el-form-item label="组织编码" :label-width="formLabelWidth">
                <el-input v-model="OrgFrom.addOrgnum" auto-complete="off"></el-input>
                </el-form-item>
                <el-form-item label="组织名称" :label-width="formLabelWidth">
                <el-input v-model="OrgFrom.addOrgposition" auto-complete="off"></el-input>
                </el-form-item>
                <el-form-item label="位置" :label-width="formLabelWidth">
                <el-input v-model="OrgFrom.addOrgname" auto-complete="off"></el-input>
                </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button @click="dialogFormVisible = false">取 消</el-button>
                <el-button type="primary" @click="addOrg">提 交</el-button>
            </div>
        </el-dialog>
        <el-dialog title="修改组织" :visible.sync="dialogFormVisible2" width="47%">
            <el-form :model="newFrom">
                <el-form-item label="组织编码" :label-width="formLabelWidth">
                <el-input v-model="newFrom.newOrgnum" auto-complete="off"></el-input>
                </el-form-item>
                <el-form-item label="组织名称" :label-width="formLabelWidth">
                <el-input v-model="newFrom.newOrgposition" auto-complete="off" ></el-input>
                </el-form-item>
                <el-form-item label="位置" :label-width="formLabelWidth">
                <el-input v-model="newFrom.newOrgname" auto-complete="off"></el-input>
                </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button @click="dialogFormVisible2 = false">取 消</el-button>
                <el-button type="primary" @click="resOrg" >提 交</el-button>
            </div>
        </el-dialog>
    </div>
</template>
<style>
    .numberPage{
        margin-top: 20px;
        text-align: right
    }
    .el-dialog__body {
        padding: 30px 80px 30px 20px !important;
        color: #606266;
        font-size: 14px;
    }
    .el-table td, .el-table th {
        padding: 6px 0 !important;
        line-height: 30px;
    }
    .btnSet{
        height: 40px;
    }
    .el-input__inner {
        height: 30px;
        line-height: 30px;
        width: 100%;
    }
    .el-table {
        font-size: 12px!important;
    }
    .el-table td, .el-table th {
        padding: 8px 0;
        line-height:30px; 
    }
</style>

<script>
    import store from '../../../../store/store'
    import axios from 'axios'
    export default {
        name:'OrganizationAndManagement',
        computed: {
            tableData(){
                return store.state.organizationList;
            },
            tableNumber(){
               return store.state.organizationListnumber;     
            }
        },
        props:{
            totalNum:Number,
        },
        store,
        data(){
            return {
                orgnum:null,
                orgposition:null,
                orgname:null,
                currentPage:1,//默认第一页
                pageSize:10,//默认10条
                OrgFrom:{
                    addOrgnum:null,
                    addOrgposition:null,
                    addOrgname:null,
                },
                newFrom:{
                    id:null,
                    newOrgnum:null,
                    newOrgposition:null,
                    newOrgname:null,
                },
                dialogFormVisible2: false,
                dialogFormVisible: false,
                formLabelWidth: '120px'
            }
        },
        beforeCreate(){
            let _this = this;
            axios({
                method: 'post',
                url: _this.$store.state.defaultHttp+_this.$store.state.orgURL+'selectByCriteria',
            }).then(function(res){
                _this.$store.state.organizationList = res.data.result.records;
                _this.$store.state.organizationListnumber = res.data.result.totalRecords;
                
            }).catch(function(err){
            console.log(err)
            })
        },
        methods: {
            resBtn(){
                this.orgnum = null;
                this.orgname = null;
                this.orgposition = null;
                let _this = this;
                axios({
                    method: 'post',
                    url: _this.$store.state.defaultHttp+_this.$store.state.orgURL+'selectByCriteria',
                }).then(function(res){
                    _this.$store.state.organizationList = res.data.result.records;
                    _this.$store.state.organizationListnumber = res.data.result.totalRecords;
                    
                }).catch(function(err){
                    console.log(err)
                })
            },
            handleEdit(index, row) {
                this.newFrom.id = row.id; 
                this.newFrom.newOrgnum = row.orgnum;
                this.newFrom.newOrgname = row.orgname;
                this.newFrom.newOrgposition = row.orgposition; 
                this.dialogFormVisible2 = true;
            },
            handleDelete(index, row) {
                let _this = this
                _this.$confirm('是否确认删除组织[' + row.orgname + ']？', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    }).then(({ value }) => {
                        axios({
                            method: 'get',
                            url: _this.$store.state.defaultHttp+_this.$store.state.orgURL+'/delete?id=' + row.id,
                            headers:{'wmsnet-token':_this.$store.state.token}
                        }).then(function(res){
                                _this.$message({
                                    message: '删除组织成功',
                                    type: 'success'
                                })
                                axios({
                                    method: 'post',
                                    url: _this.$store.state.defaultHttp+_this.$store.state.orgURL+'selectByCriteria',
                                }).then(function(res){
                                    _this.$store.state.organizationList = res.data.result.records;
                                    _this.$store.state.organizationListnumber = res.data.result.totalRecords;
                                    
                                }).catch(function(err){
                                console.log(err)
                                })
                        }).catch(function(err){
                            console.log(err)
                        })
                    }).catch(() => {
                    this.$message({
                        type: 'info',
                        message: '取消删除组织[' + row.orgname + ']'
                    });       
                });
            },
            handleSizeChange(val) {
                let self = this;
                self.pageSize = val;
                
            },
            handleCurrentChange(val) {
                let self = this;
                self.currentPage = val;
            },
            selectData(){//{"orgnum":"1","orgname":"2","orgposition":"3"}
                let inputData = {};
                    inputData.orgnum = this.orgnum;
                    inputData.orgname = this.orgname;
                    inputData.orgposition = this.orgposition;
                let _this = this;
                axios({
                    method: 'post',
                    url: _this.$store.state.defaultHttp+_this.$store.state.orgURL+'selectByCriteria',
                    data:inputData,
                }).then(function(res){
                    _this.$store.state.organizationList = res.data.result.records;
                    _this.$store.state.organizationListnumber = res.data.result.totalRecords;
                    if(inputData !== undefined){
                        state.configThis.$message({
                        message: '查询成功',
                        type: 'success'
                        })
                    }
                }).catch(function(err){
                    console.log(err)
                })
            },
            addOrg(){
                let _this = this;
                let mydata = {};
                mydata.orgnum = this.OrgFrom.addOrgnum;
                mydata.orgname = this.OrgFrom.addOrgname;
                mydata.orgposition =this.OrgFrom.addOrgposition;
                axios({
                    method: 'post',
                    url: _this.$store.state.defaultHttp+_this.$store.state.orgURL+'/add',
                    data:JSON.stringify(mydata),
                    headers:{'wmsnet-token':_this.$store.state.token}
                }).then(function(res){
                    _this.$message({
                        message: '新增组织成功',
                        type: 'success'
                    })
                    axios({
                        method: 'post',
                        url: _this.$store.state.defaultHttp+_this.$store.state.orgURL+'selectByCriteria',
                    }).then(function(res){
                        _this.$store.state.organizationList = res.data.result.records;
                        _this.$store.state.organizationListnumber = res.data.result.totalRecords;
                        
                    }).catch(function(err){
                    console.log(err)
                    })
                    _this.dialogFormVisible = false
                }).catch(function(err){
                    console.log(err)
                })        
            } ,
            resOrg(){
                let _this = this;
                let mydata = {};
                mydata.id = this.newFrom.id ;
                mydata.orgnum = this.newFrom.newOrgnum;
                mydata.orgname = this.newFrom.newOrgname;
                mydata.orgAccount =this.newFrom.newOrgposition;
                axios({
                    method: 'post',
                    url:  _this.$store.state.defaultHttp+ _this.$store.state.orgURL+'/update',
                    data:JSON.stringify(mydata),
                    headers:{'wmsnet-token': _this.$store.state.token}
                }).then(function(res){
                    console.log(res)
                    _this.$message({
                        message: '修改组织信息成功',
                        type: 'success'
                    })
                    axios({
                        method: 'post',
                        url: _this.$store.state.defaultHttp+_this.$store.state.orgURL+'selectByCriteria',
                    }).then(function(res){
                        _this.$store.state.organizationList = res.data.result.records;
                        _this.$store.state.organizationListnumber = res.data.result.totalRecords;
                        
                    }).catch(function(err){
                    console.log(err)
                    })
                    _this.dialogFormVisible2 = false
                }).catch(function(err){
                    console.log(err)
                })       
            }  
        },
        
    }
</script>
