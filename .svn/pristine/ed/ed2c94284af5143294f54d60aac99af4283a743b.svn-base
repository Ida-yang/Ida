<template>
    <el-row>
        <el-col :span="8" :offset="8">
            <div  style="color:#fff;font-size:32px;margin-top:25%;text-align: center">纽恩泰 <span style="font-size:18px;">QIS管理系统</span></div>            
        </el-col>
        <el-col :span="8" :offset="8">
            <div class="grid-content bg-purple-dark">
                <el-form  :model="loginFrom" status-icon  :rules="rules"  ref="loginFrom" 
                 class="demo-ruleForm"
                  style="color:#fff" >
                    <el-form-item prop="orgId">
                        <el-select v-model="loginFrom.orgId" placeholder="请选择组织" style="width:70%;margin-left:14%;margin-top:10%">
                                <el-option
                                v-for="item in options"
                                :key="item.id"
                                :label="item.orgname"
                                :value="item.orgname">
                                </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item prop="user">
                        <el-input type="text"
                            style="width:70%;margin-left:14%;" 
                            v-model="loginFrom.user"
                            auto-complete="off"
                            placeholder="请输入登录账号" 
                            prefix-icon="el-icon-new-people_fill">
                        </el-input>
                    </el-form-item>
                    <el-form-item  prop="password">
                        <el-input type="password" 
                        v-model="loginFrom.password"
                        placeholder="请输入登录密码" 
                        prefix-icon="el-icon-new-lock_fill"
                        auto-complete="off" style="width:70% ;margin-left:14%;"></el-input>
                    </el-form-item>
                    <el-form-item style="width:70% ;margin-left:14%;">
                        <el-checkbox v-model="userNamechecked" style="color:#fff" @change="rememberUserName">记住账号</el-checkbox>
                        <el-checkbox v-model="userPasschecked" style="color:#fff;margin-left:31%" @change="rememberUserPass">记住密码</el-checkbox>
                    </el-form-item>
                    <el-form-item>
                        <el-button type="primary" @click="submitForm('loginFrom')" style="width:70%;margin-left:14%;">登录</el-button>
                    </el-form-item>
                </el-form>
            </div>
        </el-col>
    </el-row>    
</template>

<script>
import store from '../store/store'
import '../assets/iconfont/iconfont.css';
import axios from 'axios'
export default { 
    name: 'login',
    computed: {
        options(){
            return store.state.organizationList;
        }
    },
    store,
    data () {
    return {
        loginFrom:{
            orgId:'',
            user:'',
            password:''
        },
        selectList:null,
        userNamechecked:false,
        userPasschecked:false,
        value: '',
        rules: {
            orgId: [
                { required: true, message: '请选择组织', trigger: 'change' }
            ],
            user: [
                { required: true, message: '请输入用户名', trigger: 'blur' },
            ],
            password: [
                { required: true, message: '请输入密码', trigger: 'blur' },
            ],
        }
    }
    },
    beforeCreate(){
        let _this = this;
            axios({
                    method: 'post',
                    url: _this.$store.state.defaultHttp+_this.$store.state.orgURL+'selectByCriteria',
                }).then(function(res){
                    console.log(res)
                    _this.loginFrom.orgId = localStorage.getItem("orgname")
                    _this.$store.state.organizationList = res.data.result.records;
                    _this.$store.state.organizationListnumber = res.data.result.totalRecords;
                    
                }).catch(function(err){
                console.log(err)
                })
                
    },

    beforeMount(){
        
        this.loginFrom.user=localStorage.getItem("userName");
        this.loginFrom.password=localStorage.getItem("userPass");
        
        if(localStorage.getItem("userNameChecked"))
            this.userNamechecked=true;
        if(localStorage.getItem("userPasschecked"))
            this.userPasschecked=true;
    },
    methods: {
        rememberUserName (){
            let Cboolean=this.userNamechecked
            this.userNamechecked==!Cboolean
        },
        rememberUserPass (){
            let Cboolean=this.userPasschecked
            this.userPasschecked==!Cboolean
        },
        submitForm(from) {
            let neworgId=null;
            for(var i=0;i<this.$store.state.organizationList.length;i++){
                if(this.loginFrom.orgId == this.$store.state.organizationList[i].orgname){
                    neworgId=this.$store.state.organizationList[i].id
                    console.log(neworgId)
                     
                }
            }
            localStorage.setItem('orgname',this.loginFrom.orgId);
            let logInfo = {};
                logInfo.orgId = neworgId;
                logInfo.user = this.loginFrom.user;
                logInfo.account = this.loginFrom.user;
                logInfo.password = this.loginFrom.password;
            let SaveSelection={};
                SaveSelection.userNamechecked = (this.userNamechecked).toString();
                SaveSelection.userPasschecked = (this.userPasschecked).toString();
            let data=[logInfo,SaveSelection,this];
            if(!logInfo.orgId) {
                this.$message({
                    message: "组织不能为空",
                    type: 'error'
                });
                return;
            }
            if(!logInfo.account) {
                this.$message({
                    message: "账号不能为空",
                    type: 'error'
                });
                return;
            }
            if(!logInfo.password) {
                this.$message({
                    message: "密码不能为空",
                    type: 'error'
                });
                return;
            }
            this.$store.dispatch('loginForm',data);
            }
    }
}
</script>

<style>
    body{
        background: #2d3a4b;
    }
   .loginBox{
       width: 80%;
       text-align: center
   }
    .el-form-item__error{
        left: 20% !important;
    }
</style>
