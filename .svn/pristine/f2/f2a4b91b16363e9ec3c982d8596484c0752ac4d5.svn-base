<template>
    <!-- 形态转换单详情 -->
    <div>
        <div class="grid-content " style="margin-left:3px;">
            <span class="labelClass">单号:</span>
            <el-input v-model="ordernumber" placeholder="单号" style="width:200px" disabled></el-input>
            <span class="labelClass">状态:</span>
            <el-input v-model="status" placeholder="状态" style="width:200px" disabled></el-input>
        </div>
        <div class="grid-content " style="margin-left:3px;margin-top:10px;">
            <span class="labelClass">制单人:</span>
            <el-input v-model="makeuser" placeholder="制单人" style="width:200px" disabled></el-input>
            <span class="labelClass">制单时间:</span>
            <el-input v-model="makeordertime" placeholder="制单时间" style="width:200px" disabled></el-input>
        </div>
        <div class="grid-content " style="margin-left:3px;margin-top:10px;">
            <span class="labelClass">审核人:</span>
            <el-input v-model="audituser" placeholder="审核人" style="width:200px" disabled></el-input>
        </div>
        <el-table
            class="materialList"
            :data="materialList"
            border
            tooltip-effect="dark"
            row-key="id"
            :expand-row-keys="expands"
            style="width: 100%;margin-top:20px;">

            <el-table-column 
                type="expand"
                width="100"
                align="center"
                fixed="left"
                header-align="center"
                label="查看序列号"
                prop="beforeProduct.modalShiftSerialnumbers">
                <template slot-scope="scope">
                    <el-form class="serialForm">
                        <el-form-item
                            class="serialsHead">
                            <span class="serialNum">序列号</span>
                            <span class="serialStatus">状态</span>
                        </el-form-item>
                        <el-form-item
                            class="serialsRow"
                            style="height: 30px;margin:0px;border-top: 1px solid rgb(235, 233, 233);"
                            v-for="item in scope.row.modalShiftSerialnumbers"
                            :key="item.id">
                            <span class="serialNum">
                                {{ item.serialnumber.snnum }}
                            </span>
                            <span class="serialStatus">
                                {{ item.serialnumber.snnum | serialStatus }}
                            </span>
                        </el-form-item>
                        <!-- <el-form-item label="商品名称">
                            <span>{{ props.row.name }}</span>
                        </el-form-item>
                        <el-form-item label="所属店铺">
                            <span>{{ props.row.shop }}</span>
                        </el-form-item> -->
                    </el-form>
                </template>
            </el-table-column>
            <el-table-column
                prop="beforeProduct.productNo"
                label="原成品料号"
                align="center"
                fixed="left"
                header-align="center"
                width="120">
            </el-table-column>
            <el-table-column
                prop="beforeProduct.productname"
                label="原成品名称"
                align="center"
                fixed="left"
                header-align="center"
                width="120">
            </el-table-column>
            <el-table-column
                prop="afterProduct.productNo"
                label="转换后成品料号"
                align="center"
                fixed="left"
                header-align="center"
                width="120">
            </el-table-column>
            <el-table-column
                prop="afterProduct.productname"
                label="转换后成品名称"
                align="center"
                fixed="left"
                header-align="center"
                width="120">
            </el-table-column>
            <el-table-column
                prop="plancount"
                label="计划数量"
                align="center"
                fixed="left"
                header-align="center"
                width="80">
            </el-table-column>
            <el-table-column
                prop="actualcount"
                label="实际数量"
                align="center"
                fixed="left"
                header-align="center"
                width="80">
            </el-table-column>
        </el-table>
        <div class="block numberPage">
            <el-pagination
            @size-change="handleSizeChange"
            @current-change="handleCurrentChange"
            :current-page="recentPage"
            :page-sizes="[10, 20, 50, 100]"
            :page-size="10"
            layout="total, sizes, prev, pager, next, jumper"
            :total="tableNumber">
            </el-pagination>
        </div>
    </div>
</template>
<style>
    .labelClass{
        display: inline-block;
        font-size:13px;
        width:80px;
        font-weight: bold;
        text-align: right;
    }
    .el-table__row {
        height: 45px;
    }
    .el-input__inner {
        height: 25px !important;
        line-height: 25px!important;
        width: 100%;
    }
    .serialForm {
        margin:0px 0px 20px 20px;
        width: 450px;
        /* line-height: 30px!important; */
        border: 1px solid rgb(235, 233, 233);
    }
    .serialForm span {
        line-height: 30px!important;
    }
    .serialsHead {
        margin: 0px;
        font-weight: bold;
        height: 30px;
        width: 100%;
        background-color: gainsboro;
        color: cornflowerblue;
    }
    .serialsRow {
        height: 30px;
        margin:0px;
        border-top: 1px solid rgb(235, 233, 233);
    }
    .serialNum {
        display: block;
        float: left;
        width: 70%;
        height: 30px;
        text-align: center;
        border-right: 1px solid rgb(235, 233, 233);
    }
    .serialStatus {
        display: block;
        float: left;
        width: 29%;
        height: 30px;
        text-align: center;
    }
</style>

<script>
    import store from '../../../../store/store'
    import {mapState} from 'vuex'
    import axios from 'axios'
    export default {
        name:'OrderDetails',
        comptude:{  
        },
        inject:["reload"],
        data(){
            return {
                recentPage:1,//默认第一页
                recordCount:10,//默认10条
                ordernumber: null,
                audituser: null,
                makeuser: null,
                makeordertime: null,
                status: null,
                afterProduct: null,
                beforeProduct: null,
                materialList: null,
                tableNumber: null,
                
                expands: [],// 要展开的行，数值的元素是row的key值
            }
        },
        created(){
            this.loadData();
        },
        filters: {
            serialStatus: function (val) {
                return val == 0 ? '在库' : val== 1 ?  '不在库' : val== 2 ?  '报废' : "未知状态";
            },
        },
        methods:{
            loadData(){
                let _this=this;
                axios({
                        method: 'get',
                        url: _this.$store.state.defaultHttp+_this.$store.state.modalShiftUrl+'getById?id='+_this.$store.state.transferWithinId,
                        headers:{'wmsnet-token':sessionStorage.getItem('token')},
                    }).then(function(res){
                        let result = res.data.result;
                        _this.ordernumber = result.ordernumber;
                        _this.makeuser = result.makeuser;
                        _this.audituser = result.audituser;
                        _this.makeordertime = result.makeordertime;
                        switch(result.status) {
                            case 0: _this.status = "未转换";break;
                            case 1: _this.status = "已提交";break;
                            case 2: _this.status = "已重新打印";break;
                            default: _this.status = "未知状态";
                        }
                        
                        let tableData = result.modalShiftDetails;
                        let recentPage = _this.recentPage;
                        let recordCount = _this.recordCount;
                        _this.materialList = tableData.slice((recentPage-1)*recordCount,recentPage*recordCount);
                        _this.tableNumber = result.modalShiftDetails.length;
                    }).catch(function(err){
                    });
            },
            handleSizeChange(val) {
                this.recordCount = val;
                this.$options.methods.loadData.bind(this)();
            },
            handleCurrentChange(val) {
                this.recentPage = val;
                this.$options.methods.loadData.bind(this)();
            },
            
            //在<table>里，我们已经设置row的key值设置为每行数据id：row-key="id"
            // rowClick(row, event, column) {
            //     Array.prototype.remove = function (val) {
            //         let index = this.indexOf(val);
            //         if (index > -1) {
            //             this.splice(index, 1);
            //         }
            //     };

            //     if (this.expands.indexOf(row.id) < 0) {
            //         this.expands.push(row.id);
            //     } else {
            //         this.expands.remove(row.id);
            //     }
            // }
        }
        
    }
</script>
